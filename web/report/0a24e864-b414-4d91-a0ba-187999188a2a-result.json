{
  "name": "test_login02",
  "status": "broken",
  "statusDetails": {
    "message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"username\"]\"}\n  (Session info: MicrosoftEdge=126.0.2592.102); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6D7E98132+13538]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6D7E21DE9+595465]\n\t(No symbol) [0x00007FF6D7C3E6CF]\n\t(No symbol) [0x00007FF6D7C82960]\n\t(No symbol) [0x00007FF6D7C82A1F]\n\t(No symbol) [0x00007FF6D7CBD627]\n\t(No symbol) [0x00007FF6D7CA203F]\n\t(No symbol) [0x00007FF6D7C78147]\n\t(No symbol) [0x00007FF6D7CBB1EE]\n\t(No symbol) [0x00007FF6D7CA1C63]\n\t(No symbol) [0x00007FF6D7C7766E]\n\t(No symbol) [0x00007FF6D7C7683C]\n\t(No symbol) [0x00007FF6D7C77221]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF6D80596D4+1099860]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6D7D9D8FC+53532]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6D7D90E25+1605]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF6D8058665+1095653]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6D7E2C961+27777]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6D7E26CE4+4100]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6D7E26E1B+4411]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6D7E1CFA0+575424]\n\tBaseThreadInitThunk [0x00007FFF6E47257D+29]\n\tRtlUserThreadStart [0x00007FFF6F38AF28+40]",
    "trace": "self = <scripts.test_login_assert.TestLogin object at 0x00000257FFA465D0>\n\n    def test_login02(self):\n        # 用户名\n>       self.driver.find_element(By.ID, \"username\").send_keys(\"\")\n\nscripts\\test_login_assert.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nE:\\SoftWare\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nE:\\SoftWare\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000257FFA45610>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...E1CFA0+575424]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF6E47257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF6F38AF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"username\"]\"}\nE         (Session info: MicrosoftEdge=126.0.2592.102); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6D7E98132+13538]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6D7E21DE9+595465]\nE       \t(No symbol) [0x00007FF6D7C3E6CF]\nE       \t(No symbol) [0x00007FF6D7C82960]\nE       \t(No symbol) [0x00007FF6D7C82A1F]\nE       \t(No symbol) [0x00007FF6D7CBD627]\nE       \t(No symbol) [0x00007FF6D7CA203F]\nE       \t(No symbol) [0x00007FF6D7C78147]\nE       \t(No symbol) [0x00007FF6D7CBB1EE]\nE       \t(No symbol) [0x00007FF6D7CA1C63]\nE       \t(No symbol) [0x00007FF6D7C7766E]\nE       \t(No symbol) [0x00007FF6D7C7683C]\nE       \t(No symbol) [0x00007FF6D7C77221]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF6D80596D4+1099860]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6D7D9D8FC+53532]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6D7D90E25+1605]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF6D8058665+1095653]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6D7E2C961+27777]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6D7E26CE4+4100]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF6D7E26E1B+4411]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF6D7E1CFA0+575424]\nE       \tBaseThreadInitThunk [0x00007FFF6E47257D+29]\nE       \tRtlUserThreadStart [0x00007FFF6F38AF28+40]\n\nE:\\SoftWare\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"
  },
  "start": 1721224958564,
  "stop": 1721224968602,
  "uuid": "c7a5f4e4-265e-4ad4-995a-fa196176dc49",
  "historyId": "e7cd56c058b216707f71450f818a2f19",
  "testCaseId": "e7cd56c058b216707f71450f818a2f19",
  "fullName": "scripts.test_login_assert.TestLogin#test_login02",
  "labels": [
    {
      "name": "parentSuite",
      "value": "scripts"
    },
    {
      "name": "suite",
      "value": "test_login_assert"
    },
    {
      "name": "subSuite",
      "value": "TestLogin"
    },
    {
      "name": "host",
      "value": "Lin"
    },
    {
      "name": "thread",
      "value": "10172-MainThread"
    },
    {
      "name": "framework",
      "value": "pytest"
    },
    {
      "name": "language",
      "value": "cpython3"
    },
    {
      "name": "package",
      "value": "scripts.test_login_assert"
    }
  ]
}